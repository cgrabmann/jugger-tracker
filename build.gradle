buildscript {
    ext {
        springBootVersion = '2.1.2.RELEASE'
    }
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.openapitools:openapi-generator-gradle-plugin:3.3.4")
        classpath("net.ltgt.gradle:gradle-apt-plugin:0.20")
        classpath("com.moowork.gradle:gradle-node-plugin:1.2.0")
    }
}

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'org.openapi.generator'
apply plugin: 'net.ltgt.apt-idea'
apply plugin: 'com.moowork.node'

group = 'at.jugger'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.liquibase:liquibase-core'
    implementation 'org.springframework.session:spring-session-core'
    implementation 'io.springfox:springfox-swagger2:2.8.0'
    implementation 'org.mapstruct:mapstruct:1.3.0.Beta2'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    runtimeOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'mysql:mysql-connector-java'
    compileOnly 'org.springframework.boot:spring-boot-configuration-processor'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.3.0.Beta2'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testRuntimeOnly 'com.h2database:h2'
}

ext.serverOutputDir = "$buildDir/generated/openApi/spring"

task buildSpringServerApi(type: org.openapitools.generator.gradle.plugin.tasks.GenerateTask) {
    generatorName = "spring"
    validateSpec = true
    inputSpec = "$rootDir/src/main/openapi/tracker.yaml".toString()
    ignoreFileOverride = "$rootDir/src/main/openapi/.openapi-generator-ignore".toString()
    outputDir = serverOutputDir.toString()
    configOptions = [
            apiPackage: "at.jugger.tracker.api",
            invokerPackage: "at.jugger.tracker.invoker",
            modelPackage: "at.jugger.tracker.dto",
            dateLibrary: "java8-localdatetime",
            configPackage: "at.jugger.tracker.config",
            delegatePattern: true,
            useBeanValidation: true,
            useTags: true
    ]
}

ext {
    parcelOutputDir = "${project.buildDir}/resources/main/vue"
}

sourceSets {
    main {
        java {
            srcDirs "${serverOutputDir}/src/main/java"
        }
        resources {
            srcDirs "${serverOutputDir}/src/main/resources"
            srcDirs "${parcelOutputDir}"
        }
    }
}

node {
    download = true
    version = '10.15.1'
    yarnVersion = '1.13.0'
}

compileJava.dependsOn buildSpringServerApi
